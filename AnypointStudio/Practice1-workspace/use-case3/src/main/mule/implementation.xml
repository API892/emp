<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:email="http://www.mulesoft.org/schema/mule/email" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd">
	<os:object-store name="Object_store" doc:name="Object store" doc:id="488ce026-a353-4926-a6ae-8e0c05f8f424" persistent="false" />
	<file:config name="File_Config" doc:name="File Config" doc:id="7da5565e-7e8c-4976-b237-a1eb818a3e22" >
		<file:connection workingDir="C:\Users\ssa_s\OneDrive\useCase3\jsonSchema\" />
	</file:config>
	<email:smtp-config name="Email_SMTP" doc:name="Email SMTP" doc:id="6d176b3c-515a-4072-9689-eea4f8da3831" >
		<email:smtp-connection host="smtp.gmail.com" port="587" user="akuthota.swapna@gmail.com" password="swapna@13" />
	</email:smtp-config>
	<flow name="fetch-dbrecords-by-empid" doc:id="419184dc-d27e-42ec-8def-414c49f86db5" >
		<http:request method="GET" doc:name="Request-by-id" doc:id="9fd84918-a171-4d59-82d6-dfedffb0169c" config-ref="HTTP_Request_configuration" path="/api/employee/{id}">
			<http:uri-params ><![CDATA[#[output application/java
---
{
	"id" : attributes.uriParams.id
}]]]></http:uri-params>
		</http:request>
		<ee:transform doc:name="DW-Json-payload" doc:id="80ae5781-525c-452a-a1b0-99e1e76715b3" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="Schedule-Sync-DB-SF" doc:id="103b6098-eb39-4530-afed-bd622708ff2f" initialState="started">
		<scheduler doc:name="Scheduler" doc:id="21c14667-f328-49a0-8cb9-e2e03ce9a1c0" >
			<scheduling-strategy >
				<fixed-frequency frequency="10" timeUnit="SECONDS"/>
			</scheduling-strategy>
		</scheduler>
		<http:request method="GET" doc:name="Request" doc:id="d100c7d2-d62e-44b2-a699-de25d23ec5ce" config-ref="HTTP_Request_configuration" path="/api/employee"/>
		<ee:transform doc:name="Employee-object-mapping" doc:id="a788ed2a-b679-437b-866e-d34a3db30b92" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map (item, index) -> {
	Name__c: item.empName,
	Age__c: item.empAge,
	City__c: item.city,
	Email__c:item.empEmail,
	Emp_ID__c: item.empId,
	Project__c: item.project,
	Manager__c: item.manager
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<salesforce:upsert doc:name="Employee Object" doc:id="3e6668ea-8986-43be-9644-fdade0980022" config-ref="Salesforce_Config" objectType="Employee__c" externalIdFieldName="Emp_ID__c"/>
		<logger level="INFO" doc:name="Logger" doc:id="667f0a7e-d854-4d19-b018-16ff87f3ca4b" message='#["No new records"]'/>
	</flow>
	<flow name="delete-dbrecords-sync-SF" doc:id="991790eb-0040-4359-a8b7-fe8c48d05c70" >
		<set-variable value="#[attributes.queryParams.id as Number default '']" doc:name="Set Variable" doc:id="fe129936-29c3-4ee2-b574-5ed043270fac" variableName="id"/>
		<db:delete doc:name="Delete-employee-data" doc:id="7f9441e1-ed1a-4a1e-9d13-570267c24b06" config-ref="Database_Config">
			<db:sql ><![CDATA[delete from employee where empId = :id
]]></db:sql>
			<db:input-parameters ><![CDATA[#[{id:vars.id}]]]></db:input-parameters>
		</db:delete>
		<salesforce:query doc:name="Query" doc:id="7062458c-9c83-4329-bae3-2e6a8e28b8ec" config-ref="Salesforce_Config">
			<salesforce:salesforce-query ><![CDATA[select Id,Emp_ID__c,Name__c,Age__c,City__c,Email__c,Project__c,Manager__c from Employee__c where Emp_ID__c = :id
]]></salesforce:salesforce-query>
			<salesforce:parameters ><![CDATA[#[{id:vars.id}]]]></salesforce:parameters>
		</salesforce:query>
		<ee:transform doc:name="payload-map" doc:id="ff47f957-2623-41d4-b9b4-8093051f852d" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map {
	Id : $.Id,
	Name__c : $.Name__c,
	Age__c : $.Age__c,
	City__c : $.City__c,
	Email__c : $.Email__c,
	Emp_ID__c : $.Emp_ID__c,
	Project__c : $.Project__c,
	Manager__c : $.Manager__c 
	}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<salesforce:delete doc:name="Delete-SF-Data" doc:id="b05e1048-22e1-45f2-b670-06265627ee35" config-ref="Salesforce_Config">
			<salesforce:ids ><![CDATA[#[payload.Id]]]></salesforce:ids>
		</salesforce:delete>
		<ee:transform doc:name="json" doc:id="cd30d81f-3fa4-483f-bce6-5da51ed1ea05" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": "deleted sucessfully"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="213f355a-1d32-407d-9a9a-9f3af5d23eac" type="ANY">
				<set-payload value='#["error raised"]' doc:name="Set Payload" doc:id="555d8a06-8570-4d75-9049-a227644e1380" />
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="update-records-dbtosf" doc:id="c196922d-b605-4f6a-9acf-c6f117ba30f3" >
		<json:validate-schema doc:name="Validate schema" doc:id="3f26f1b6-8106-4eac-aea4-9bd8ed0a3ec1" schema="empSchema.json"/>
		<ee:transform doc:name="json payload" doc:id="54d080de-9b21-4125-9fa1-bf5beded8058" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<foreach doc:name="For Each" doc:id="a644fbd2-0242-4174-9023-61e8fb2040f2" >
			<set-variable value="#[payload.empId]" doc:name="Set Variable" doc:id="0b5d51c7-41e9-49c3-abb1-03f45fd5d7ef" variableName="id" />
			<db:update doc:name="Update" doc:id="ea3f7fcd-1313-423a-bcc5-a719da762610" config-ref="Database_Config">
			<db:sql><![CDATA[update employee set empName = :empName,empEmail = :empEmail,empAge = :empAge,city = :city,project = :project,manager = :manager where empId = :empId]]></db:sql>
			<db:input-parameters><![CDATA[#[{empId:vars.id,empName:payload.empName,empEmail:payload.email,empAge:payload.age,city:payload.city,project:payload.project,manager:payload.manager}]]]></db:input-parameters>
		</db:update>
			<http:request method="GET" doc:name="Request" doc:id="69d9e785-419c-4600-b9a8-519c0df856d5" config-ref="HTTP_Request_configuration" path="/api/employee/{id}">
				<http:uri-params ><![CDATA[#[output application/java
---
{
	"id" : vars.id
}]]]></http:uri-params>
			</http:request>
			<ee:transform doc:name="Transform Message" doc:id="f7fb41b3-9a31-47ba-ae41-39be9c285573">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map {
	Name__c : $.empName,
	Age__c : $.empAge,
	City__c : $.city,
	Email__c : $.empEmail,
	Emp_ID__c : $.empId,
	Project__c : $.project,
	Manager__c : $.manager
	}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			<salesforce:upsert objectType="Employee__c" externalIdFieldName="Emp_ID__c" doc:name="Upsert" doc:id="e6817696-346b-4668-9dfc-aea623553f3e" config-ref="Salesforce_Config">
		</salesforce:upsert>
		</foreach>
		<ee:transform doc:name="Transform Message" doc:id="e9202dff-2a39-41a4-a9fa-5cba5b0a9e8a" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message" : " salesforce records updated successfully"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="33755148-d7fe-408b-8503-36d8a3fe380a" type="JSON:SCHEMA_NOT_HONOURED">
				<file:write doc:name="Write" doc:id="7ce8cf35-8d54-4cd5-8778-431cf6bb7bc8" config-ref="File_Config" path="#['validatejson' ++ (now() as String {format:'yyyy-MM-dd-hh-mm-ss'}) ++ '.json']">
					<file:content ><![CDATA[#[error.errorMessage]]]></file:content>
				</file:write>
				<logger level="INFO" doc:name="Logger" doc:id="17955d82-b18e-4c67-a950-ef6690f68130" message='#["error written in the file"]'/>
			</on-error-propagate>
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="0671fbe6-25fb-4805-82e7-d5cc450fb51c" type="DB:BAD_SQL_SYNTAX, DB:CONNECTIVITY, DB:QUERY_EXECUTION, DB:RETRY_EXHAUSTED, FILE:ACCESS_DENIED, FILE:CONNECTIVITY, FILE:FILE_ALREADY_EXISTS, FILE:FILE_LOCK, FILE:ILLEGAL_CONTENT, FILE:ILLEGAL_PATH, FILE:RETRY_EXHAUSTED, JSON:INVALID_INPUT_JSON, JSON:INVALID_SCHEMA, JSON:SCHEMA_NOT_FOUND, SALESFORCE:CONNECTIVITY, SALESFORCE:INVALID_INPUT, SALESFORCE:INVALID_RESPONSE, SALESFORCE:LIMIT_EXCEEDED, SALESFORCE:MUTUAL_AUTHENTICATION_FAILED, SALESFORCE:NOT_FOUND, SALESFORCE:RETRY_EXHAUSTED, SALESFORCE:TIMEOUT, EXPRESSION, STREAM_MAXIMUM_SIZE_EXCEEDED">
				<email:send doc:name="Send" doc:id="02a4a17d-e6d5-469d-bebf-88b197262d67" config-ref="Email_SMTP" fromAddress="akuthota.swapna@gmail.com">
					<email:to-addresses >
						<email:to-address value="swapna.akuthota@apisero.com" />
						<email:to-address value="veena.vangala@apisero.com" />
						<email:to-address value="praveen.anugu@apisero.com" />
						<email:to-address value="suhas.v@apisero.com" />
						<email:to-address value="kiran.indugula@apisero.com" />
					</email:to-addresses>
					<email:body contentType="application/json" >
						<email:content ><![CDATA[#[error.errorMessage]]]></email:content>
					</email:body>
				</email:send>
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="Write-CSV-file" doc:id="8fd3ef3f-7639-4780-8585-b24d7695198b" >
		<scheduler doc:name="Scheduler" doc:id="7847a979-3574-46fe-8c3a-9edf05ff8fd8" >
			<scheduling-strategy >
				<cron expression="0 0 20 * * ?" timeZone="Asia/kolkata" />
			</scheduling-strategy>
		</scheduler>
		<http:request method="GET" doc:name="Request" doc:id="2f8b3735-0c77-4175-8066-2c3a7417ad1e" config-ref="HTTP_Request_configuration" path="/api/employee"/>
		<file:write doc:name="Write" doc:id="45bc36f8-8bb7-4259-8268-7dbe07a1623c" config-ref="File_Config" path="#['Employeedata' ++ (now() as String {format:'yyyy-MM-dd-hh-mm-ss'}) ++ '.csv']">
			<file:content ><![CDATA[#[output application/csv header=false --- payload]]]></file:content>
		</file:write>
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="a1b7053a-2331-4797-8e83-8053a08f56e1" type="ANY">
				<email:send doc:name="Send" doc:id="5dfd28fa-0a28-4155-aa39-6d14c5173b08" config-ref="Email_SMTP" fromAddress="akuthota.swapna@gmail.com" >
					<email:to-addresses >
						<email:to-address value="swapna.akuthota@apisero.com" />
						<email:to-address value="veena.vangala@apisero.com" />
						<email:to-address value="praveen.anugu@apisero.com" />
						<email:to-address value="suhas.v@apisero.com" />
						<email:to-address value="kiran.indugula@apisero.com" />
					</email:to-addresses>
					<email:body contentType="application/json" >
						<email:content ><![CDATA[#[error.errorMessage]]]></email:content>
					</email:body>
				</email:send>
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="inserting-into-db" doc:id="55b27c54-4c06-489e-b545-07d3c60d5ccd" >
		<json:validate-schema doc:name="Validate schema" doc:id="30a7e056-ebc8-4aa9-8244-988e57462d9f" schema="empSchema.json"/>
		<foreach doc:name="For Each" doc:id="ee4d7197-4cfc-4402-8942-3453cd258f24" >
			<db:insert doc:name="Insert-Employee-Table" doc:id="41ab1ec6-f318-4433-82a3-24f13c2acbc8" config-ref="Database_Config">
				<db:sql ><![CDATA[insert into employee(empId,empName,empEmail,empAge,city,project,manager) values(:empId,:empName,:empEmail,:empAge,:city,:project,:manager)]]></db:sql>
				<db:input-parameters ><![CDATA[#[{empId:payload.empId,empName:payload.empName,empEmail:payload.email,empAge:payload.age,city:payload.city,project:payload.project,manager:payload.manager}]]]></db:input-parameters>
			</db:insert>
		</foreach>
		<logger level="INFO" doc:name="Logger" doc:id="3744252c-e104-4904-9033-eaf1a3cc6358" message='#["inserted into database "]'/>
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="254f15e6-1bda-4ad0-b4d7-5e5d9c7b8ac3" type="JSON:SCHEMA_NOT_HONOURED">
				<file:write doc:name="Write" doc:id="f4252ba3-a0d9-4e4d-8c79-36990f559e33" config-ref="File_Config" path="#['validatejson' ++ (now() as String {format:'yyyy-MM-dd-hh-mm-ss'}) ++ '.json']" mode="CREATE_NEW">
					<file:content ><![CDATA[#[error.errorMessage]]]></file:content>
				</file:write>
				<logger level="INFO" doc:name="Logger" doc:id="faa5c26f-f4bf-4ba1-adf1-4e60b358952d" />
			</on-error-propagate>
		</error-handler>
	</flow>
</mule>
